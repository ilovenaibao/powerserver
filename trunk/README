

按照 1:100000 设计的高效网络服务

结构特点

1、使用单线程处理  accept 和 SIGCHILD 信号
	好处: 可以对付突发连接，支持爆发连接，并可以一定程度上抗击 DDoS
	万一工作进程挂掉了，就可以马上重新开启一个.并开启一个新的线程去清理掉僵死进程的垃圾		

2、多个工作 线程/进程 处理 ready 的连接 ( epoll (一般是 CPU 倍数数) )
	好处: 可以加快响应时间。
	可以在这里检测超时掉的连接，而不用占用宝贵的 accept 线程的时间	
	放在(共享了内存的)进程中可以做到健壮性. 即便这个工作进程挂掉了，也不影响整个服务进程，呵呵.
	
3、耗时作业 进/线程 池 等待繁重作业派发
	好处：耗时作业提交给独立进/线程，	比如要处理数据库，会在等待数据库上消耗很多时间
	
		
编程指南：
	提供两个类：一个管理服务体系的 class netserver，一个是处理客户连接的 class worker。
	都需要重载
	
	netserver 需要重载 newWorker() 和 deleteWorker();
	
	分别在客户端连接上来和断开连接的时候调用。需要自己继承 class worker ， 并在重载的
	newWorker  deleteWorker 中创建和撤销 派生的 worker 类对象
	
	基类的 构造函数中，参数是自己创建的套接字。并且不可以是非阻塞模式， 
	必须是阻塞模式
	
	可以在派生类中传递套接字参数给基类的构造函数，具体可以看看 test_main.cpp 这个 既是测试
	用的又是 Demo .
	
	netserver 必须重载 newWorker() 和 deleteWorker();
	用来创建 自己派生下来的 worker 类。 因为本类库内部并没有派生的 worker 类的实现，所以内部
	无法创建，必须由用户自己定义函数创建
	
	首先调用 
	
	
	
		
	
		
	
	
	